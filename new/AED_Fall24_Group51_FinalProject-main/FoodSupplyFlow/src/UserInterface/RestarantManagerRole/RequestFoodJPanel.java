/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.RestarantManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.LogisticEnterprise;
import Business.Network.Network;
import Business.Organization.LogisticOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FoodRequirementRequest;
import Business.WorkQueue.Products;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhinav
 */
public class RequestFoodJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestFoodJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private EcoSystem business;
    
    public RequestFoodJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.business = business;
        valueLabel.setText(enterprise.getName());
        
        
        comboBakeryProducts.setEnabled(false);
        comboCerealsProducts.setEnabled(false);
        comboDairyProducts.setEnabled(false);
        comboMeatProducts.setEnabled(false);
        comboVegetablesProducts.setEnabled(false);
        comboFruitsProducts.setEnabled(false);
        
        quantBakery.setEnabled(false);
        quantCereals.setEnabled(false);
        quantDairy.setEnabled(false);
        quantFruits.setEnabled(false);
        quantMeat.setEnabled(false);
        quantVegetables.setEnabled(false);
        
        //btnReset.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestTestJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        messageJTextField = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        comboBakeryProducts = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        checkBakery = new javax.swing.JCheckBox();
        checkDairy = new javax.swing.JCheckBox();
        checkMeat = new javax.swing.JCheckBox();
        checkCereals = new javax.swing.JCheckBox();
        checkVegetables = new javax.swing.JCheckBox();
        checkFruits = new javax.swing.JCheckBox();
        quantBakery = new javax.swing.JSpinner();
        comboDairyProducts = new javax.swing.JComboBox<>();
        comboMeatProducts = new javax.swing.JComboBox<>();
        comboCerealsProducts = new javax.swing.JComboBox<>();
        comboVegetablesProducts = new javax.swing.JComboBox<>();
        comboFruitsProducts = new javax.swing.JComboBox<>();
        quantDairy = new javax.swing.JSpinner();
        quantMeat = new javax.swing.JSpinner();
        quantFruits = new javax.swing.JSpinner();
        quantVegetables = new javax.swing.JSpinner();
        quantCereals = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        suppliertblProducts = new javax.swing.JTable();
        backJButton1 = new javax.swing.JButton();
        enterpriseLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 51, 102));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestTestJButton.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        requestTestJButton.setText("Submit Order Request");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        add(requestTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 415, 338, 44));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Quantity:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(344, 112, -1, -1));
        add(messageJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 368, 130, 30));

        btnReset.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        btnReset.setText("Reset Options");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 519, 338, 39));

        valueLabel.setFont(new java.awt.Font("Bodoni MT", 1, 24)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(255, 255, 255));
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 51, 260, -1));

        enterpriseLabel.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(255, 255, 255));
        enterpriseLabel.setText("Summarize Items:");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(556, 91, 240, 30));

        comboBakeryProducts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bread", "Muffin", "Cakes" }));
        add(comboBakeryProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 148, -1, -1));

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Food Type:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 115, -1, -1));

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Product:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 112, -1, -1));

        checkBakery.setText("Bakery Products");
        checkBakery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBakeryActionPerformed(evt);
            }
        });
        add(checkBakery, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 147, -1, -1));

        checkDairy.setText("Dairy Products");
        checkDairy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkDairyActionPerformed(evt);
            }
        });
        add(checkDairy, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 176, -1, -1));

        checkMeat.setText("Meat Products");
        checkMeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkMeatActionPerformed(evt);
            }
        });
        add(checkMeat, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 205, -1, -1));

        checkCereals.setText("Cereals");
        checkCereals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCerealsActionPerformed(evt);
            }
        });
        add(checkCereals, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 234, -1, -1));

        checkVegetables.setText("Vegetables");
        checkVegetables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkVegetablesActionPerformed(evt);
            }
        });
        add(checkVegetables, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 263, -1, -1));

        checkFruits.setText("Fruits");
        checkFruits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkFruitsActionPerformed(evt);
            }
        });
        add(checkFruits, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 292, -1, -1));

        quantBakery.setModel(new javax.swing.SpinnerNumberModel(0, 0, 500, 1));
        add(quantBakery, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 148, -1, -1));

        comboDairyProducts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Milk", "Eggs", "Butter" }));
        add(comboDairyProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 177, -1, -1));

        comboMeatProducts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chicken", "Turkey", "Ham" }));
        add(comboMeatProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 206, 72, -1));

        comboCerealsProducts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Wheat", "Rice", "Oats" }));
        add(comboCerealsProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 235, -1, -1));

        comboVegetablesProducts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tomatoes", "Potatoes", "Capsicum" }));
        add(comboVegetablesProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 263, -1, -1));

        comboFruitsProducts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Banana", "Orange", "Apple" }));
        add(comboFruitsProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 293, 72, -1));

        quantDairy.setModel(new javax.swing.SpinnerNumberModel(0, 0, 500, 1));
        add(quantDairy, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 177, -1, -1));

        quantMeat.setModel(new javax.swing.SpinnerNumberModel(0, 0, 500, 1));
        add(quantMeat, new org.netbeans.lib.awtextra.AbsoluteConstraints(343, 206, -1, -1));

        quantFruits.setModel(new javax.swing.SpinnerNumberModel(0, 0, 500, 1));
        add(quantFruits, new org.netbeans.lib.awtextra.AbsoluteConstraints(343, 293, -1, -1));

        quantVegetables.setModel(new javax.swing.SpinnerNumberModel(0, 0, 500, 1));
        add(quantVegetables, new org.netbeans.lib.awtextra.AbsoluteConstraints(344, 263, -1, -1));

        quantCereals.setModel(new javax.swing.SpinnerNumberModel(0, 0, 500, 1));
        add(quantCereals, new org.netbeans.lib.awtextra.AbsoluteConstraints(343, 235, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Comment Message:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 371, -1, -1));

        suppliertblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food Type", "Product", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(suppliertblProducts);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 130, -1, -1));

        backJButton1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        backJButton1.setText("Back");
        backJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton1ActionPerformed(evt);
            }
        });
        add(backJButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 470, 338, 39));

        enterpriseLabel1.setFont(new java.awt.Font("Bodoni MT", 1, 24)); // NOI18N
        enterpriseLabel1.setForeground(new java.awt.Color(255, 255, 255));
        enterpriseLabel1.setText("EnterPrise :");
        add(enterpriseLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 51, 120, 30));
    }// </editor-fold>//GEN-END:initComponents
  public void populateData(ArrayList<Products> productList) {

        DefaultTableModel model = (DefaultTableModel) suppliertblProducts.getModel();

        model.setRowCount(0);

            for (Products p : productList) {
                Object row[] = new Object[3];
                row[0] = p;
                row[1] = p.getProductName();
                row[2] = p.getQuantity();
                ((DefaultTableModel) suppliertblProducts.getModel()).addRow(row);  
        }
    }
  
    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed

        if(!(checkBakery.isSelected()) && !(checkDairy.isSelected()) && !(checkMeat.isSelected()) && !(checkCereals.isSelected()) && !(checkVegetables.isSelected())){

            JOptionPane.showMessageDialog(null, "Please Select Products!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String mess = messageJTextField.getText();
        if (mess.equalsIgnoreCase("")) {

            JOptionPane.showMessageDialog(null, "Please add comments", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        
        int check=0;

        String message = messageJTextField.getText();

        ArrayList<Products> productList = new ArrayList<>();

        if (checkBakery.isSelected()) {

            if(quantBakery.getValue().equals(check)){

                JOptionPane.showMessageDialog(null, "Please Add Quantity!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            Products p = new Products();
            p.setProductName(String.valueOf(comboBakeryProducts.getSelectedItem()));
            p.setProductType("BAKERY");
            p.setQuantity((Integer) quantBakery.getValue());
            productList.add(p);
            populateData(productList);
        }
        
        if (checkFruits.isSelected()) {

            if(quantFruits.getValue().equals(check)){

                JOptionPane.showMessageDialog(null, "Please Add Quantity!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Products p = new Products();
            p.setProductName(String.valueOf(comboFruitsProducts.getSelectedItem()));
            p.setProductType("FRUITS");
            p.setQuantity((Integer) quantFruits.getValue());
            productList.add(p);
            populateData(productList);
        }
        
        if (checkVegetables.isSelected()) {

            if(quantVegetables.getValue().equals(check)){

                JOptionPane.showMessageDialog(null, "Please Add Quantity!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Products p = new Products();
            p.setProductName(String.valueOf(comboVegetablesProducts.getSelectedItem()));
            p.setProductType("VEGETABLES");
            p.setQuantity((Integer) quantVegetables.getValue());
            productList.add(p);
            populateData(productList);
        }
        if (checkCereals.isSelected()) {

            if(quantCereals.getValue().equals(check)){

                JOptionPane.showMessageDialog(null, "Please Add Quantity!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Products p = new Products();
            p.setProductName(String.valueOf(comboCerealsProducts.getSelectedItem()));
            p.setProductType("CEREALS");
            p.setQuantity((Integer) quantCereals.getValue());
            productList.add(p);
            populateData(productList);
        }
        if (checkMeat.isSelected()) {

            if(quantMeat.getValue().equals(check)){

                JOptionPane.showMessageDialog(null, "Please Add Quantity!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Products p = new Products();
            p.setProductName(String.valueOf(comboMeatProducts.getSelectedItem()));
            p.setProductType("MEAT");
            p.setQuantity((Integer) quantMeat.getValue());
            productList.add(p);
            populateData(productList);
        }
        if (checkDairy.isSelected()) {

            if(quantDairy.getValue().equals(check)){

                JOptionPane.showMessageDialog(null, "Please Add Quantity!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Products p = new Products();
            p.setProductName(String.valueOf(comboDairyProducts.getSelectedItem()));
            p.setProductType("DAIRY");
            p.setQuantity((Integer) quantDairy.getValue());
            productList.add(p);
            populateData(productList);
        }

        FoodRequirementRequest request = new FoodRequirementRequest();
        request.setMessage(message);
        request.setSender(userAccount);
        request.setStatus("Order Generated");
        request.setProductList(productList);

        for (Network n : business.getNetworkList()) {

            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {

                e.setEnterpriseType(Enterprise.EnterpriseType.Logistic);
                
                if (e instanceof LogisticEnterprise) {
                    Organization org = null;
                    for (Organization organization : e.getOrganizationDirectory().getOrganizationList()) {
                        if (organization instanceof LogisticOrganization) { 
                            org = organization;
                            break;
                        }
                    }
                    if (org != null) {

                        org.getWorkQueue().getWorkRequestList().add(request);
                        userAccount.getWorkQueue().getWorkRequestList().add(request);
                    }
                }
            }
        }

        JOptionPane.showMessageDialog(null, "Request Initiated Successfully!");

        checkBakery.setSelected(false);
        checkCereals.setSelected(false);
        checkDairy.setSelected(false);
        checkFruits.setSelected(false);
        checkMeat.setSelected(false);
        checkVegetables.setSelected(false);

        comboBakeryProducts.setEnabled(false);
        comboCerealsProducts.setEnabled(false);
        comboDairyProducts.setEnabled(false);
        comboMeatProducts.setEnabled(false);
        comboVegetablesProducts.setEnabled(false);
        comboFruitsProducts.setEnabled(false);

        quantBakery.setEnabled(false);
        quantCereals.setEnabled(false);
        quantDairy.setEnabled(false);
        quantFruits.setEnabled(false);
        quantMeat.setEnabled(false);
        quantVegetables.setEnabled(false);

        btnReset.setEnabled(false);
        messageJTextField.setText("");

    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed

        checkBakery.setSelected(false);
        checkCereals.setSelected(false);
        checkDairy.setSelected(false);
        checkFruits.setSelected(false);
        checkMeat.setSelected(false);
        checkVegetables.setSelected(false);

        comboBakeryProducts.setEnabled(false);
        comboCerealsProducts.setEnabled(false);
        comboDairyProducts.setEnabled(false);
        comboMeatProducts.setEnabled(false);
        comboVegetablesProducts.setEnabled(false);
        comboFruitsProducts.setEnabled(false);

        quantBakery.setEnabled(false);
        quantCereals.setEnabled(false);
        quantDairy.setEnabled(false);
        quantFruits.setEnabled(false);
        quantMeat.setEnabled(false);
        quantVegetables.setEnabled(false);

    }//GEN-LAST:event_btnResetActionPerformed

    private void checkBakeryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBakeryActionPerformed
        comboBakeryProducts.setEnabled(true);
        quantBakery.setEnabled(true);

        //*************** added recent ***********
    }//GEN-LAST:event_checkBakeryActionPerformed

    private void checkDairyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkDairyActionPerformed
        comboDairyProducts.setEnabled(true);
        quantDairy.setEnabled(true);
    }//GEN-LAST:event_checkDairyActionPerformed

    private void checkMeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkMeatActionPerformed
        comboMeatProducts.setEnabled(true);
        quantMeat.setEnabled(true);
    }//GEN-LAST:event_checkMeatActionPerformed

    private void checkCerealsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCerealsActionPerformed
        comboCerealsProducts.setEnabled(true);
        quantCereals.setEnabled(true);
    }//GEN-LAST:event_checkCerealsActionPerformed

    private void checkVegetablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkVegetablesActionPerformed
        comboVegetablesProducts.setEnabled(true);
        quantVegetables.setEnabled(true);
    }//GEN-LAST:event_checkVegetablesActionPerformed

    private void checkFruitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkFruitsActionPerformed
        comboFruitsProducts.setEnabled(true);
        quantFruits.setEnabled(true);
    }//GEN-LAST:event_checkFruitsActionPerformed

    private void backJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton1ActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ResturantMangerWorkAreaJPanel dwjp = (ResturantMangerWorkAreaJPanel) component;
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton1;
    private javax.swing.JButton btnReset;
    private javax.swing.JCheckBox checkBakery;
    private javax.swing.JCheckBox checkCereals;
    private javax.swing.JCheckBox checkDairy;
    private javax.swing.JCheckBox checkFruits;
    private javax.swing.JCheckBox checkMeat;
    private javax.swing.JCheckBox checkVegetables;
    private javax.swing.JComboBox<String> comboBakeryProducts;
    private javax.swing.JComboBox<String> comboCerealsProducts;
    private javax.swing.JComboBox<String> comboDairyProducts;
    private javax.swing.JComboBox<String> comboFruitsProducts;
    private javax.swing.JComboBox<String> comboMeatProducts;
    private javax.swing.JComboBox<String> comboVegetablesProducts;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField messageJTextField;
    private javax.swing.JSpinner quantBakery;
    private javax.swing.JSpinner quantCereals;
    private javax.swing.JSpinner quantDairy;
    private javax.swing.JSpinner quantFruits;
    private javax.swing.JSpinner quantMeat;
    private javax.swing.JSpinner quantVegetables;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JTable suppliertblProducts;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
